// <auto-generated />
using Ecommerce.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20230216070007_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.CustomerDao", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Rnc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers", "dbo");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.CustomerTypeDao", b =>
                {
                    b.Property<int>("CustomerTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerTypeId");

                    b.ToTable("CustomerTypes", "dbo");

                    b.HasData(
                        new
                        {
                            CustomerTypeId = 1,
                            Description = "Customer Type 1"
                        },
                        new
                        {
                            CustomerTypeId = 2,
                            Description = "Customer Type 2"
                        });
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.InvoiceDao", b =>
                {
                    b.Property<long>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceId"), 1L, 1);

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Itbis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ncf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices", "dbo");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.InvoiceDetailDao", b =>
                {
                    b.Property<long>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvoiceDetailId"), 1L, 1);

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails", "dbo");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.ProductCategoryDao", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategories", "dbo");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = 1,
                            CategoryName = "Laptop Computers"
                        },
                        new
                        {
                            ProductCategoryId = 2,
                            CategoryName = "Desktop Computers"
                        },
                        new
                        {
                            ProductCategoryId = 3,
                            CategoryName = "Cellphones"
                        },
                        new
                        {
                            ProductCategoryId = 4,
                            CategoryName = "Home Appliances"
                        });
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.ProductDao", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products", "dbo");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.CustomerDao", b =>
                {
                    b.HasOne("Ecommerce.Shared.Models.Daos.CustomerTypeDao", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.InvoiceDao", b =>
                {
                    b.HasOne("Ecommerce.Shared.Models.Daos.CustomerDao", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.InvoiceDetailDao", b =>
                {
                    b.HasOne("Ecommerce.Shared.Models.Daos.InvoiceDao", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Shared.Models.Daos.ProductDao", "Product")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.ProductDao", b =>
                {
                    b.HasOne("Ecommerce.Shared.Models.Daos.ProductCategoryDao", "productCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategory");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.CustomerDao", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.CustomerTypeDao", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.InvoiceDao", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.ProductCategoryDao", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Shared.Models.Daos.ProductDao", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
